<?php
/**
 * File Name: Index.php
 * Automatically generated by QHGC tool
 * @date: 2021-05-25 16:49:27
 * @version: 4.0.4
 */

namespace qh4module\rabc_adv\models\depart;


use qh4module\rabc_adv\HpRabcAdv;
use qh4module\token\TokenFilter;

/**
 * Class Index
 * 分页获取tbl_bk_depart表的数据
 * @package backend\models\models\rabc
 */
class Index extends DepartModel
{
    /**
     * @var string 接收参数，筛选字段：id
     */
    public $id;

    /**
     * @var string 接收参数，筛选字段：部门名称
     */
    public $name;


    /**
     * @inheritDoc
     */
    public function rules()
    {
        return $this->mergeRules([
            [['sorter'], 'sorter'],
        ], parent::rules());
    }

    /**
     * @inheritDoc
     */
    public function attributeLangs()
    {
        return $this->mergeLanguages(
            parent::attributeLangs(),
            [
                'sorter' => '排序规则',
            ]
        );
    }

    /**
     * @inheritDoc
     */
    public function run()
    {
        // 所有的字段,根据列表显示进行删减
        $fields = ['`ta`.`id`', '`ta`.`name`', '`ta`.`create_by`',
            '`ta`.`create_time`', '`ta`.`desc`', '`ta`.`sort`',
            'tb.nick_name as create_by_name',
        ];

        // 构建基础查询
        $tb_info = $this->external->userInfoTableName();
        $tb_depart = $this->external->departTableName();
        $tb_rel = $this->external->departRelationTableName();
        $user_id = TokenFilter::getPayload('user_id');

        $db = $this->external->getDb();
        $sql = $db->select($fields)
            ->from("$tb_depart as ta")
            ->leftJoin("$tb_info as tb", 'ta.create_by=tb.user_id');

        // 非管理员只显示自己相关部门
        if (!HpRabcAdv::is_administrator($user_id, $this->external)) {
            list($depart_ids, $child_ids) = HpRabcAdv::getUserRelatedAllDepart($user_id, $this->external);
            $depart_ids = array_merge($depart_ids, $child_ids);
            if (empty($depart_ids)) {
                return array('total' => 0, 'list' => [], 'page' => 1, 'limit' => 10);
            }
            $sql->whereIn('id', $depart_ids);
        }

        // 追加筛选条件
        if ($this->id) {
            $sql->where('`ta`.`id`= :id366')
                ->bindValue('id366', $this->id);
        }
        if ($this->name) {
            $sql->where('`ta`.`name` like :name768')
                ->bindValue('name768', "%{$this->name}%");
        }

        $result = $sql->where('`ta`.`del_time`= :del_time732')
            ->bindValue('del_time732', 0)
            ->query();

        $result_relation = $this->external->getDb()
            ->select(['depart_id', 'parent_id'])
            ->from("$tb_rel as t1")
            ->leftJoin("$tb_depart as t2", 't1.depart_id=t2.id')
            ->where('t1.del_time=0')
            ->orderByDESC(['t2.sort'])
            ->query();

        $data = self::formatResult($result, $result_relation);

        return array(
            'total' => sizeof($data),
            'list' => $data,
            'page' => 1,
            'limit' => 10
        );
    }


    /**
     * 将结果格式化成树状
     * @param $result_depart
     * @param $result_relation
     * @param $index_key
     * @return array
     */
    public static function formatResult($result_depart, $result_relation, $index_key = 'id')
    {
        $tree = array();
        $temp = array_column($result_depart, null, $index_key);

        foreach ($result_relation as $item) {
            if (!isset($temp[$item['depart_id']])) {
                // 如果是搜索部分,可能存在没有这个角色,直接略过
                continue;
            }

            if ($item['parent_id'] != '' && isset($temp[$item['parent_id']])) {
                $temp[$item['parent_id']]['children'][] = &$temp[$item['depart_id']];
            } else {
                $tree[] = &$temp[$item['depart_id']];
            }
        }
        unset($temp);

        return $tree;
    }
}
